#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
PROG="rmd"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"
SRC_DIR="${BASH_SOURCE%/*}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#set opts

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 031120211651-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : rmd --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Thursday, Mar 11, 2021 16:51 EST
# @File          : rmd
# @Description   : remove files and directories recursively
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Main function
__version() { app_version; }
__help() {
  app_help "Usage: rmd dir/file" \
    "-v, --version          -  display version" \
    "-h, --help             -  display help"
}
main() {
  if [ -f "$SRC_DIR/functions.bash" ]; then local DIR="$SRC_DIR"; else local DIR="$HOME/.local/bin"; fi
  if [ -f "$DIR/functions.bash" ]; then
    . "$DIR/functions.bash"
  else
    printf "\t\t\\033[0;31m%s \033[0m\n" "Couldn't source the functions file from $DIR"
    return 1
  fi
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  case $1 in
  -v | --version) __version ;;
  -h | --help) __help ;;
  -*) shift 1 ;;
  esac
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  __rm_file() {
    rm -Rf "${1:-$file}" &>/dev/null && return 0 || return 1
  }
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  exitCode=0
  if [ $# = 0 ]; then
    printf_red "Must provide path to file or folder for deletion"
    return 1
  else
    if type -P trash &>/dev/null; then
      find "$@" -maxdepth 1 -print0 | while IFS= read -r -d '' file; do
        trash "$file" || exitCode+=1
      done
    else
      find "$@" -maxdepth 1 -print0 | while IFS= read -r -d '' file; do
        if [ -n "$file" ]; then
          if [ -d "$file" ]; then
            printf_green "Deleting folder and all files within: $file"
            __rm_file "$file" &>/dev/null || exitCode+=1
          elif [ -e "$file" ]; then
            printf_green "Deleting the file: $file"
            __rm_file "$file" &>/dev/null || exitCode+=1
          else
            printf_red "Failed to delete non-existant file/folder: $file"
            exitCode+=1
          fi
        fi
      done
    fi
  fi
  return ${exitCode:-$?}
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# execute function
main "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# end
