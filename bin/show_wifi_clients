#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
PROG="show_wifi_clients"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"
SRC_DIR="${BASH_SOURCE%/*}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#set opts

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 202207042253-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : show_wifi_clients --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Thursday, Mar 11, 2021 17:47 EST
# @File          : show_wifi_clients
# @Description   : shows connected stations in hotspot mode
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Main function
__version() { app_version; }
__help() {
  app_help "Usage: show_wifi_clients" \
    "-v, --version          -  display version" \
    "-h, --help             -  display help"
}
main() {
  if [ -f "$SRC_DIR/functions.bash" ]; then local DIR="$SRC_DIR"; else local DIR="$HOME/.local/bin"; fi
  if [[ -f "$DIR/functions.bash" ]]; then
    . "$DIR/functions.bash"
  else
    printf "\\033[0;31m%s \033[0m\n" "Couldn't source the functions file from $DIR"
    return 1
  fi
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  case $1 in
  -v | --version) __version ;;
  -h | --help) __help ;;
  esac
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  if [ -f "/etc/dnsmasq.conf" ]; then
    leasefileconf="$(grep 'dhcp-leasefile=' /etc/dnsmasq.conf | sed 's/#//g;s#dhcp-leasefile=##g' | grep '^' || return 1)"
  fi
  leasefile="${leasefileconf:-/var/lib/misc/dnsmasq.leases}"
  dnsmasqbin="$(command -v dnsmasq 2>/dev/null)"
  if [ -f "$leasefile" ] && [ -f "$dnsmasqbin" ]; then
    printf_green "# All connected wifi devices, with IP address,"
    printf_green "# hostname (if available), and MAC address."
    for interface in $(iw dev | grep Interface | cut -f 2 -s -d" "); do
      maclist=$(iw dev $interface station dump | grep Station | cut -f 2 -s -d" ")
      for mac in $maclist; do
        ip="UNKN"
        host=""
        ip=$(cat $leasefile | cut -f 2,3,4 -s -d" " | grep $mac | cut -f 2 -s -d" ")
        host=$(cat $leasefile | cut -f 2,3,4 -s -d" " | grep $mac | cut -f 3 -s -d" ")
        printf "%-20s %-30s %-20s" $ip $host $mac | printf_readline "5"
      done
    done
  else
    printf_red "Make sure dnsmasq is installed and running!"
    return 1
  fi
  return $?
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# execute function
main "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# end
