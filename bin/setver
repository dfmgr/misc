#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
PROG="setver"
VERSION="031620211858-git"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"
SRC_DIR="${BASH_SOURCE%/*}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#set opts

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 031620211858-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : setver --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Tuesday, Mar 16, 2021 20:52 EDT
# @File          : setver
# @Description   : Set the version for git repo
# @TODO          : Refactor code
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Main function file
if [ -f "$SRC_DIR/functions.bash" ]; then
  FUNCTIONS_DIR="$SRC_DIR"
  . "$FUNCTIONS_DIR/functions.bash"
elif [ -f "$HOME/.local/bin/functions.bash" ]; then
  FUNCTIONS_DIR="$HOME/.local/bin"
  . "$FUNCTIONS_DIR/functions.bash"
else
  printf "\t\t\033[0;31m%s \033[0m\n" "Couldn't source the functions file from $FUNCTIONS_DIR"
  return 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# helper function
__version() { app_version; }
__help() {
  app_help "Usage: setver file opts" \
    "-f, --file             -  set version file" \
    "-c, --config           -  create config file" \
    "-v, --version          -  display version" \
    "-h, --help             -  display help"
}
__config_gen() {
  local CONFDIR="$HOME/.config/misc/settings/setver"
  local CONFFILE="settings.conf"
  printf_green "Generating the config file in"
  printf_green "$CONFDIR/$CONFFILE"
  [ -d "$CONFDIR" ] || mkdir -p "$CONFDIR"
  [ -f "$CONFDIR/$CONFFILE" ] && cp -Rf "$CONFDIR/$CONFFILE" "$CONFDIR/$CONFFILE.$$"
  cat <<EOF >"$CONFDIR/$CONFFILE"
SETVER_FILE="$SETVER_FILE"
SETVER_FORMAT="$SETVER_FORMAT"
SETVER_DNSVER="$SETVER_DNSVER"
EOF
  if [ -f "$CONFDIR/$CONFFILE" ]; then
    printf_green "Your config file for $PROG has been created"
  else printf_red "Failed to create the config file"; fi
  exit $?
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Main function
main() {
  local OPTS SHORTOPTS LONGOPTS setopts SETVER_FORMAT SETVER_TYPE CUSTOM_DIR CUSTOM_FILE
  local LONGOPTS="config,version,help,file,show"
  local SHORTOPTS="c,v,h,f,s"
  local ARRAY="show dns create"
  local SETVER_DNSVER="${SETVER_DNSVER:-%Y%m%d%H%M}"
  local SETVER_FORMAT="${VERSION_DATE_FORMAT:-%Y%m%d%H%M-git}"
  local SETVER_FILE="version.txt"
  local ARGS="$*"
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  datecmd() { date +"${SETVER_FORMAT}${SETVER_TYPE}"; }
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  [ -f "$CONFDIR/$CONFFILE" ] && . "$CONFDIR/$CONFFILE"
  [ -f "$1" ] && OPTS=create && FILE="$1" && shift 1 || FILE="$SETVER_FILE"
  [ -d "$1" ] && MYCURRDIR="$1" && shift 1 || MYCURRDIR="$(__git_top_dir "${MYCURRDIR:-$PWD}")"
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # options
  local setopts=$(getopt -o "$SHORTOPTS" --long "$LONGOPTS" -n "setver" -- "$@" 2>/dev/null)
  eval set -- "$setopts" 2>/dev/null
  while :; do
    case "$1" in
    -v | --version) __version ;;
    -h | --help) __help ;;
    -c | --config) __config_gen ;;
    -f | --file) OPTS="create" ;;
    -s | --show) OPTS="show" ;;
    -d | --dir) CUSTOM_DIR="$2" && shift 2 ;;
    --) shift && break ;;
    esac
  done
  FULLDIR="$(__git_top_dir $(dirname "${CUSTOM_FILE:-$FILE}" 2>/dev/null))"
  FULLFILE="$FULLDIR/$(basename "${CUSTOM_FILE:-$FILE}" 2>/dev/null)"
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Required app check
  cmd_exists --error bash || exit 1
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # begin main app
  case ${OPTS:-$1} in
  show)
    if [ -f "$FULLFILE" ]; then
      printf_green "$FULLFILE: $(<$FULLFILE)"
    else
      printf_red "$FULLFILE doesn't exist"
    fi
    ;;
  dns)
    shift 1
    SETVER_DNSVER="$(date +"${SETVER_DNSVER}")"
    if [ -n "$1" ]; then
      printf_blue "${SETVER_DNSVER}${1}"
    else
      printf_green "${SETVER_DNSVER}01"
    fi
    ;;
  create) # Always want version in the top dir of git repo
    if __git_porcelain $FULLFILE; then
      FULLFILE="$(__git_top_dir "$FULLFILE")"
    fi
    datecmd >"$FULLFILE"
    printf_blue "Version set to "$(<$FULLFILE)" in $FULLFILE"
    ;;
  *) datecmd | printf_readline 6 ;;
  esac
  # lets exit with code
  return "${exitCode:-$?}"
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# execute function
main "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# end
