#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
APPNAME="lsd"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"
SRC_DIR="${BASH_SOURCE%/*}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#set opts

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 031320211636-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : lsd --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Saturday, Mar 13, 2021 19:33 EST
# @File          : lsd
# @Description   : List all files relative
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Main function file
if [ -f "$SRC_DIR/functions.bash" ]; then
  FUNCTIONS_DIR="$SRC_DIR"
  . "$FUNCTIONS_DIR/functions.bash"
elif [ -f "$HOME/.local/bin/functions.bash" ]; then
  FUNCTIONS_DIR="$HOME/.local/bin"
  . "$FUNCTIONS_DIR/functions.bash"
else
  printf "\t\t\033[0;31m%s \033[0m\n" "Couldn't source the functions file from $FUNCTIONS_DIR"
  return 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# helper function
__version() { app_version; }
__help() {
  app_help "Usage: lsd $PWD" \
    "-p                     - ls or find" \
    "-v                     -  show version" \
    "-d                     -  max depth" \
    "-t                     -  type f,d,l" \
    "-v, --version          -  display version" \
    "-h, --help             -  display help"
}
__find_cmd() {
  local GREP_COLORS='mt=38;5;220;1'
  local dir="$(dirname $dir/.)"
  find ${follow:--L} ${1:-$dir} -maxdepth ${depth:-1} -type ${type:-d} 2>/dev/null |
    sed 's#'${1:-$dir}/'##g' 2>/dev/null |
    sed 's#'${1:-$dir}'##g' 2>/dev/null |
    sort -u |
    grep '^' | grep -v '^$' | grep --color '.*.' &&
    return 0 ||
    return 1
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Main function
main() {
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # options
  case $1 in
  -v | --version) __version ;;
  -h | --help) __help ;;
  esac
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Required app check
  cmd_exists --error find || exit 1
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # begin main app
  local t=$(getopt -o h,v,l,d:,t: --long link,depth:,type: -n "$APPNAME" -- "$@" 2>/dev/null)
  eval set -- "$t" 2>/dev/null
  while :; do
    case $1 in
    -h | --help)
      shift
      __help
      ;;
    -v | --version)
      shift
      __version
      ;;
    -d | --depth)
      shift
      depth="$1"
      ;;
    -l | --link)
      shift
      follow="-L"
      ;;
    -t | --type)
      shift
      type="${1// /,}"
      ;;
    --)
      shift
      break
      ;;
    *)
      break
      ;;
    esac
    shift
  done
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  local cwd="${*:-$PWD}"
  [[ "$cwd" = "." ]] && local cwd="$PWD"
  if [ ! -e "$cwd" ]; then
    local errormsg="I'm sorry report that '$1' doesn't exist"
    local error=true
  fi
  if [ -d "$cwd" ]; then
    __find() { __find_cmd "${1:-$cwd}/." "$@"; }
  elif [ -f "$cwd" ]; then
    __find() { basename "${1:-$cwd}"; }
  else
    __find() { ls -A "${1:-$cwd}" 2>/dev/null | sed 's#'${1:-$cwd}/'##g'; }
  fi
  dir="$cwd"
  if [ -z "$error" ] && __find "$dir"; then
    local exitCode=0
  else
    printf_red "${errormsg:-${dir%/*} appears to have no other directories}" >&2
    local exitCode=1
  fi
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # end main function
  return "${exitCode:-0}"
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# execute function
main "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# end
