#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 202207042002-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : get_city_id --help
# @Copyright     : Copyright: (c) 2022 Jason Hempstead, Casjays Developments
# @Created       : Monday, Jul 04, 2022 20:02 EDT
# @File          : get_city_id
# @Description   : find id of city
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
get_city_id_main() {
  PROG="$(basename "$0" 2>/dev/null)"
  VERSION="202207042002-git"
  RUN_USER="${SUDO_USER:-${USER}}"
  USER="${SUDO_USER:-${USER}}"
  HOME="${USER_HOME:-${HOME}}"
  SRC_DIR="${BASH_SOURCE%/*}"
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Set bash options
  if [[ "$1" == "--debug" ]]; then shift 1 && set -xo pipefail && export SCRIPT_OPTS="--debug" && export _DEBUG="on"; fi

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Main function file
  if [ -f "$SRC_DIR/functions.bash" ]; then
    local FUNCTIONS_DIR="$SRC_DIR"
    . "$FUNCTIONS_DIR/functions.bash"
  elif [ -f "$HOME/.local/bin/functions.bash" ]; then
    local FUNCTIONS_DIR="$HOME/.local/bin"
    . "$FUNCTIONS_DIR/functions.bash"
  else
    printf "\t\t\033[0;31m%s \033[0m\n" "Couldn't source the functions file from ${FUNCTIONS_DIR:-$SRC_DIR}"
    return 1
  fi
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # helper functions - See github.com/dfmgr/misc/bin/functions.bash
  __version() { app_version; }
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  __help() {
    app_help "4" "Usage: get_city_id [cityName] " \
      "--options                              -  Show all options" \
      "-c, --config                           -  Create config file" \
      "-v, --version                          -  Display version" \
      "-h, --help                             -  Display help"

    exit $?
  }
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  __list_options() {
    printf_custom "$1" "$2: $(echo ${3:-$ARRAY} | __sed 's|:||g;s|'$4'| '$5'|g')" 2>/dev/null
  }
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  __gen_config() {
    printf_green "Generating the config file in"
    printf_green "$GET_CITY_ID_CONFIG_DIR/$GET_CITY_ID_CONFIG_FILE"
    [ -d "$GET_CITY_ID_CONFIG_DIR" ] || mkdir -p "$GET_CITY_ID_CONFIG_DIR"
    [ -d "$GET_CITY_ID_CONFIG_BACKUP_DIR" ] || mkdir -p "$GET_CITY_ID_CONFIG_BACKUP_DIR"
    [ -f "$GET_CITY_ID_CONFIG_DIR/$GET_CITY_ID_CONFIG_FILE" ] &&
      cp -Rf "$GET_CITY_ID_CONFIG_DIR/$GET_CITY_ID_CONFIG_FILE" "$GET_CITY_ID_CONFIG_BACKUP_DIR/$GET_CITY_ID_CONFIG_FILE.$$"
    cat <<EOF >"$GET_CITY_ID_CONFIG_DIR/$GET_CITY_ID_CONFIG_FILE"
# Settings for get_city_id
GET_CITY_ID_JSON="${GET_CITY_ID_JSON:-https://raw.githubusercontent.com/lkozyr/CityList/master/city.list.json}"
GET_CITY_ID_CACHE_FILE="${GET_CITY_ID_CACHE_FILE:-$GET_CITY_ID_CACHE_DIR/city_ids.json}"

# Notification settings
GET_CITY_ID_GOOD_MESSAGE="${GET_CITY_ID_GOOD_MESSAGE:-Everything Went OK}"
GET_CITY_ID_ERROR_MESSAGE="${GET_CITY_ID_ERROR_MESSAGE:-Well something seems to have gone wrong}"
GET_CITY_ID_NOTIFY_ENABLED="${GET_CITY_ID_NOTIFY_ENABLED:-yes}"
GET_CITY_ID_NOTIFY_CLIENT_NAME="${NOTIFY_CLIENT_NAME:-$PROG}"
GET_CITY_ID_NOTIFY_CLIENT_ICON="${NOTIFY_CLIENT_ICON:-$GET_CITY_ID_NOTIFY_CLIENT_ICON}"

# Colorization settings
GET_CITY_ID_OUTPUT_COLOR="${GET_CITY_ID_OUTPUT_COLOR:-5}"
GET_CITY_ID_OUTPUT_COLOR_GOOD="${GET_CITY_ID_OUTPUT_COLOR_GOOD:-2}"
GET_CITY_ID_OUTPUT_COLOR_ERROR="${GET_CITY_ID_OUTPUT_COLOR_ERROR:-1}"

EOF
    if [ -f "$GET_CITY_ID_CONFIG_DIR/$GET_CITY_ID_CONFIG_FILE" ]; then
      [[ "$INIT_CONFIG" = "TRUE" ]] || printf_green "Your config file for $APPNAME has been created"
      true
    else
      printf_red "Failed to create the config file"
      false
    fi
  }
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Additional functions
  __update_id_cache() {
    curl -q -LSsf "$GET_CITY_ID_JSON" -o "$GET_CITY_ID_CACHE_FILE" 2>/dev/null
    return $?
  }
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Defaults
  local exitCode=
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Application Folders
  local GET_CITY_ID_LOG_DIR="${GET_CITY_ID_LOG_DIR:-$HOME/.local/log/get_city_id}"
  local GET_CITY_ID_CACHE_DIR="${GET_CITY_ID_CACHE_DIR:-$HOME/.cache/get_city_id}"
  local GET_CITY_ID_CONFIG_DIR="${GET_CITY_ID_CONFIG_DIR:-$HOME/.config/misc/settings/get_city_id}"
  local GET_CITY_ID_OPTIONS_DIR="${GET_CITY_ID_OPTIONS_DIR:-$HOME/.local/share/misc/get_city_id/options}"
  local GET_CITY_ID_CONFIG_BACKUP_DIR="${GET_CITY_ID_CONFIG_BACKUP_DIR:-$HOME/.local/share/misc/get_city_id/backups}"
  local GET_CITY_ID_TEMP_DIR="${GET_CITY_ID_TEMP_DIR:-$HOME/.local/tmp/system_scripts/get_city_id}"
  local GET_CITY_ID_CONFIG_FILE="${GET_CITY_ID_CONFIG_FILE:-settings.conf}"
  local GET_CITY_ID_GOOD_MESSAGE="${GET_CITY_ID_GOOD_MESSAGE:-Everything Went OK}"
  local GET_CITY_ID_ERROR_MESSAGE="${GET_CITY_ID_ERROR_MESSAGE:-Well something seems to have gone wrong}"
  local GET_CITY_ID_NOTIFY_ENABLED="${GET_CITY_ID_NOTIFY_ENABLED:-yes}"
  local GET_CITY_ID_NOTIFY_CLIENT_NAME="${NOTIFY_CLIENT_NAME:-$APPNAME}"
  local GET_CITY_ID_NOTIFY_CLIENT_ICON="${NOTIFY_CLIENT_ICON:-$GET_CITY_ID_NOTIFY_CLIENT_ICON}"
  local GET_CITY_ID_OUTPUT_COLOR="${GET_CITY_ID_OUTPUT_COLOR:-5}"
  local GET_CITY_ID_OUTPUT_COLOR_GOOD="${GET_CITY_ID_OUTPUT_COLOR_GOOD:-2}"
  local GET_CITY_ID_OUTPUT_COLOR_ERROR="${GET_CITY_ID_OUTPUT_COLOR_ERROR:-1}"
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Enviroment overrides
  GET_CITY_ID_JSON="${GET_CITY_ID_JSON:-https://raw.githubusercontent.com/lkozyr/CityList/master/city.list.json}"
  GET_CITY_ID_CACHE_FILE="${GET_CITY_ID_CACHE_FILE:-$GET_CITY_ID_CACHE_DIR/city_ids.json}"
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Generate config files
  [ -f "$GET_CITY_ID_CONFIG_DIR/$GET_CITY_ID_CONFIG_FILE" ] || [[ "$*" = *config ]] || INIT_CONFIG="${INIT_CONFIG:-TRUE}" __gen_config ${SETARGS:-$@}
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Import config
  [ -f "$GET_CITY_ID_CONFIG_DIR/$GET_CITY_ID_CONFIG_FILE" ] && . "$GET_CITY_ID_CONFIG_DIR/$GET_CITY_ID_CONFIG_FILE"
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Ensure Directories exist
  [ -d "$GET_CITY_ID_LOG_DIR" ] || mkdir -p "$GET_CITY_ID_LOG_DIR" &>/dev/null
  [ -d "$GET_CITY_ID_TEMP_DIR" ] || mkdir -p "$GET_CITY_ID_TEMP_DIR" &>/dev/null
  [ -d "$GET_CITY_ID_CACHE_DIR" ] || mkdir -p "$GET_CITY_ID_CACHE_DIR" &>/dev/null
  local GET_CITY_ID_TEMP_FILE="${GET_CITY_ID_TEMP_FILE:-$(mktemp $GET_CITY_ID_TEMP_DIR/XXXXXX 2>/dev/null)}"
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Setup trap to remove temp file
  trap 'exitCode=${exitCode:-$?};[ -n "$GET_CITY_ID_TEMP_FILE" ] && [ -f "$GET_CITY_ID_TEMP_FILE" ] && rm -Rf "$GET_CITY_ID_TEMP_FILE" &>/dev/null' EXIT
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Setup notification function
  if [ "$GET_CITY_ID_NOTIFY_ENABLED" = "yes" ]; then
    __notifications() {
      export NOTIFY_GOOD_MESSAGE="${GET_CITY_ID_GOOD_MESSAGE}"
      export NOTIFY_ERROR_MESSAGE="${GET_CITY_ID_ERROR_MESSAGE}"
      export NOTIFY_CLIENT_NAME="${GET_CITY_ID_NOTIFY_CLIENT_NAME}"
      export NOTIFY_CLIENT_ICON="${GET_CITY_ID_NOTIFY_CLIENT_ICON}"
      notifications "$@" && exitCode=0 || exitCode=1
      unset NOTIFY_CLIENT_NAME NOTIFY_CLIENT_ICON NOTIFY_GOOD_MESSAGE NOTIFY_ERROR_MESSAGE
      return ${exitCode:-$?}
    }
  else
    __notifications() { false; }
  fi
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Show warn message if variables are missing

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Argument/Option settings
  local SETARGS="$*"
  local SHORTOPTS="u"
  local LONGOPTS="options,config,version,help,dir:,update"
  local ARRAY=""
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Setup application options
  local setopts=$(getopt -o "$SHORTOPTS" --long "$LONGOPTS" -a -n "$(basename "$0" 2>/dev/null)" -- "$@" 2>/dev/null)
  eval set -- "${setopts[@]}" 2>/dev/null
  while :; do
    case "$1" in
    --options)
      shift 1
      [ -n "$1" ] || printf_blue "Current options for ${PROG:-$APPNAME}"
      [ -z "$SHORTOPTS" ] || __list_options "5" "Short Options" "-$SHORTOPTS" ',' '-'
      [ -z "$LONGOPTS" ] || __list_options "5" "Long Options" "--$LONGOPTS" ',' '--'
      [ -z "$ARRAY" ] || __list_options "5" "Base Options" "$ARRAY" ',' ''
      exit $?
      ;;
    --version)
      shift 1
      __version
      exit $?
      ;;
    --help)
      shift 1
      __help
      exit $?
      ;;
    --config)
      shift 1
      __gen_config
      exit $?
      ;;
    --dir)
      GET_CITY_ID_CWD="$2"
      shift 2
      ;;
    --update | -u)
      shift 1
      __update_id_cache
      exit $?
      ;;
    --)
      shift 1
      break
      ;;
    esac
  done
  #set -- "$SETARGS"
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Check for required applications/Network check
  cmd_exists --error bash jq || exit 1 # exit 1 if not found
  #am_i_online --error || exit 1     # exit 1 if no internet
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # APP Variables overrides
  SEARCH_TERM="$1"

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Actions based on env

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # begin main app
  if [[ -f "$GET_CITY_ID_CACHE_FILE" ]]; then
    if [[ $(find "$GET_CITY_ID_CACHE_FILE" -mtime +13 -print) ]]; then
      rm -Rf "$GET_CITY_ID_CACHE_FILE"
      __update_id_cache
    fi
  else
    __update_id_cache
  fi
  if [ -z "$SEARCH_TERM" ]; then
    printf '\t\t%s\n' "Missing city"
    exitCode=1
  elif [[ -f "$GET_CITY_ID_CACHE_FILE" ]]; then
    cat "$GET_CITY_ID_CACHE_FILE" | jq -rc '.[] | {name: .name, id: .id}' | grep -i "${SEARCH_TERM}"
    exitCode=$?
  else
    printf_red "Well something went horribly wrong!"
    exitCode=1
  fi
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # lets exit with code
  return ${exitCode:-$?}
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# execute function
get_city_id_main "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# End application
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# lets exit with code
exit ${exitCode:-$?}
