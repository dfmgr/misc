#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 202207042253-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : prompt --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Thursday, Mar 11, 2021 12:16 EST
# @File          : prompt
# @Description   : A dmenu binary prompt script.
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
PROG="prompt"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"
SRC_DIR="${BASH_SOURCE%/*}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#set opts

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# main function
__version() { app_version; }
__help() {
  app_help "Usage: prompt message action | prompt pathToFile" \
    '-c                     -  create a file | prompt -c "name" "command"' \
    "-f                     -  specify a file" \
    "-v, --version          -  display version" \
    "-h, --help             -  display help"
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
__make_conf() {
  local NAME="$1" && shift 1
  local PROMPTNAME="$1" && shift 1
  local COMMAND="$*"
  local filename="$CONFDIR/$NAME"
  cat <<EOF | tee "$filename" &>/dev/null
# Prompt for $NAME

if [ "\$(printf "No\\nYes" | dmenu -i -p '$PROMPTNAME' -nb darkred -sb red -sf white -nf gray)" = "Yes" ]; then
  $COMMAND
else
  exit 1
fi
# End dmenu prompt

EOF
  [ -f "$filename" ] && chmod -f 755 "$filename" && return 0 || return 1
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
__create() {
  local NAME="${1/ /_}"
  local PROMPTNAME="$1"
  local PROMPTCOMMAND="$2"
  shift $#
  printf_green "Generating the config for $PROMPTNAME"
  if [ -f "$CONFDIR/$NAME" ]; then
    printf_red "ðŸ˜¿ $NAME already exists in $CONFDIR ðŸ˜¿"
    exitCode=1
  else
    __make_conf "$NAME" "$PROMPTNAME" "$PROMPTCOMMAND" 2>/dev/null
    if [[ "$?" = 0 ]] && [ -f "$CONFDIR/$NAME" ]; then
      printf_green "ðŸ˜¹ Successfully create the prompt for $NAME ðŸ˜¹"
      exitCode=0
    else
      printf_red "ðŸ˜  Failed to create $CONFDIR/$NAME ðŸ˜ "
      exitCode=1
    fi
  fi
  return ${exitCode:-$?}
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
main() {
  if [ -f "$SRC_DIR/functions.bash" ]; then local DIR="$SRC_DIR"; else local DIR="$HOME/.local/bin"; fi
  if [[ -f "$DIR/functions.bash" ]]; then
    . "$DIR/functions.bash"
  else
    printf "\\033[0;31m%s \033[0m\n" "Couldn't source the functions file from $DIR"
    return 1
  fi
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # command check
  cmd_exists --error dmenu || exit 1
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # App variables
  local CONFDIR="$HOME/.config/dmenu/prompts"
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  if [ ! -d "$CONFDIR" ]; then mkdir -p "$CONFDIR" &>/dev/null; fi
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  case $1 in
  -v | --version) __version ;;
  -h | --help) __help ;;
  -c | --config)
    shift 1
    [[ "$1" = "--remove" ]] && shift 1 && rm -Rf "${CONFDIR:?}/${1/ /_}"
    __create "$1" "$2"
    exit $?
    ;;
  -f | --file)
    shift 1
    name="${1/ /_}"
    filename="${2/$CONFDIR\//$filename}"
    file="$CONFDIR/$filename"
    ;;
  *)
    name="${1/ /_}"
    if [ -f "$CONFDIR/$name" ]; then
      filename="${name/$CONFDIR\//$filename}"
      file="$CONFDIR/$filename"
    elif [ -f "$name" ]; then
      filename="$name"
      file="$name"
    fi
    if [ -z "$file" ]; then
      [ -z "$1" ] || [ -z "$2" ] || __help
    fi
    ;;
  esac
  if [ -n "$file" ]; then
    [ -f "$file" ] && . "$file" || printf_exit "Can't load $file because it doesn't exist"
  else
    [ "$(printf "No\\nYes" | dmenu -i -p "$1" -nb darkred -sb red -sf white -nf gray)" = "Yes" ] && ${2:-true} || return 1
  fi
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
main "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# end
