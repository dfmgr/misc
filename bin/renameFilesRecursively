#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
PROG="renameFilesRecursively"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"
SRC_DIR="${BASH_SOURCE%/*}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#set opts

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 202207042122-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : renameFilesRecursively --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Thursday, Mar 11, 2021 16:04 EST
# @File          : renameFilesRecursively
# @Description   : Recursively rename files
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Main function
__version() { app_version; }
__help() {
  app_help 'usage: renameFilesRecursively "/home/user/my-files" "apple" "orange"' \
    'Also uses env variables: SEARCH_DIR SEARCH REPLACE TYPE=file,dir' \
    "-v, --version          -  display version" \
    "-h, --help             -  display help"
}
main() {
  if [ -f "$SRC_DIR/functions.bash" ]; then local DIR="$SRC_DIR"; else local DIR="$HOME/.local/bin"; fi
  if [[ -f "$DIR/functions.bash" ]]; then
    . "$DIR/functions.bash"
  else
    printf "\t\t\\033[0;31m%s \033[0m\n" "Couldn't source the functions file from $DIR"
    return 1
  fi
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  case $1 in
  -v | --version) __version ;;
  -h | --help) __help ;;
  esac
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  local NEW_FILENAME exitCode
  local SEARCH_DIR="${1:-.}"
  local SEARCH_PATH="${1:-$SEARCH_PATH}"
  local SEARCH="${2:$SEARCH}"
  local REPLACE="${3:-}"
  local TYPE="${4:-$TYPE}"
  local FINDTYPE="${TYPE:-file}"
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  [ -z "$1" ] && [ -z "$SEARCH_PATH" ] && __help
  [ -z "$2" ] && [ -z "$SEARCH" ] && __help
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  move_file() { mv -f "${1:-$FILENAME}" "${2:-$NEW_FILENAME}" &>/dev/null && return 0 || return 1; }
  fail_msg() { printf_red "Failed to move $FILENAME to $NEW_FILENAME" && exitCode+="1"; }
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  if [ "$FINDTYPE" = d ] || [ "$FINDTYPE" = dir ]; then
    printf_green "Renaming all directories from $SEARCH to $REPLACE"
    find $SEARCH_PATH -type d -name "*$SEARCH*" -printf "%P\n" | while read -r FILENAME; do
      local NEW_FILENAME="${FILENAME//$SEARCH/$REPLACE}"
      if move_file; then
        [ -d "$NEW_FILENAME" ] || fail_msg
      else
        fail_msg
      fi
    done
  else
    printf_green "Renaming all files from $SEARCH to $REPLACE"
    find $SEARCH_PATH -type f,l -name "*$SEARCH*" -printf "%P\n" | while read -r FILENAME; do
      local NEW_FILENAME="${FILENAME//$SEARCH/$REPLACE}"
      if move_file; then
        [ -e "$NEW_FILENAME" ] || fail_msg
      else
        fail_msg
      fi
    done
  fi
  return ${exitCode:-$?}
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# execute function
main "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# end
