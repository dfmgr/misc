#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 202103270925-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : cdd --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Saturday, Mar 27, 2021 09:47 EDT
# @File          : cdd
# @Description   : cd into directories using shortcuts
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#[ -f "$HOME/.local/share/misc/cdd/options/array" ] || cdd --options &>/dev/null
_cdd() {
  __grep() { GREP_COLORS="" grep -sE ^''$1' =*..*'$ "$HOME/.config/misc/settings/cdd/aliases.conf" | sed 's|"||g' 2>/dev/null; }
  local cur prev words cword opts
  local cur="${COMP_WORDS[$COMP_CWORD]}"
  local prev="${COMP_WORDS[$COMP_CWORD - 1]}"
  local CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev}"
  local FUNCTIONSDIR="${HOME/.local/share/CasjaysDev/functions}"
  local CONFFILE="settings.conf"
  local CONFDIR="$HOME/.config/misc/settings/cdd"
  local OPTSDIR="$HOME/.local/share/misc/cdd/options"
  local SEARCHDIR="${CONFDIR:-$HOME/.config/misc/settings/cdd}"
  #local SEARCHCMD="$(find -L $SEARCHDIR -maxdepth 3 -type f 2>/dev/null| sed "s#"$SEARCHDIR/"##g" 2>/dev/null | grep '^')"
  local DEFAULTARRAY="$(__grep "*" | awk -F' =' '{print $1}' | sed -e 's#"##g' 2>/dev/null | grep -Ev '^$|^#' | grep '^') "
  local DEFAULTARRAY+="$(ls "${CDD_OPTIONS_PROJECT_DIR:-$HOME/.local/share/cdd/projects}" | grep -v '^$') "
  local DEFAULTOPTS="$([ -f "$OPTSDIR/options" ] && grep -sEv '#|^$' "$OPTSDIR/options" || echo '--options --help --version')"
  local LONGOPTS="$(grep -sEv '#|^$' "$OPTSDIR/options" || echo "$DEFAULTOPTS" | tr ' ' '\n' | grep '\--')"
  local SHORTOPTS="$(grep -sEv '#|^$' "$OPTSDIR/options" || echo "$DEFAULTOPTS" | tr ' ' '\n' | grep -v '\--')"
  local OPTS="$DEFAULTOPTS"
  local ARRAY="$DEFAULTARRAY"
  local SHOW_COMP_OPTS=""
  local FILEDIR=""

  _init_completion || return
  if [ "$SHOW_COMP_OPTS" != "" ]; then
    local SHOW_COMP_OPTS_SEP="$(echo "$SHOW_COMP_OPTS" | tr ',' ' ')"
    compopt -o $SHOW_COMP_OPTS_SEP
  fi
  if [[ ${cur} == --* ]]; then
    COMPREPLY=($(compgen -W '${LONGOPTS}' -- ${cur}))
  elif [[ ${cur} == -* ]]; then
    COMPREPLY=($(compgen -W '${SHORTOPTS}' -- ${cur}))
  else
    case ${COMP_WORDS[1]:-$prev} in
    --options) prev="--options" && COMPREPLY=($(compgen -W '' -- "${cur}")) ;;
    -c | --config) prev="--config" && COMPREPLY=($(compgen -W '' -- "${cur}")) ;;
    -h | --help) prev="--help" && COMPREPLY=($(compgen -W '' -- "${cur}")) ;;
    -v | --version) prev="--version" && COMPREPLY=($(compgen -W '' -- "${cur}")) ;;
    -l | --list) prev="--list" && COMPREPLY=($(compgen -W '' -- "${cur}")) ;;
    -d | --delete) prev="--list" && COMPREPLY=($(compgen -W '' -- "${cur}")) ;;
    -m | --modify)
      prev="-m"
      compopt -o nospace
      [ $COMP_CWORD -eq 2 ] && COMPREPLY=($(compgen -W '{a..z} {A..Z} {0..9}' -o nospace -- "${cur}"))
      [ $COMP_CWORD -eq 3 ] && COMPREPLY=($(compgen -W '$(_filedir)' -o filenames -o dirnames -- "${cur}"))
      [ $COMP_CWORD -gt 3 ] && COMPREPLY=($(compgen -W '' -- "${cur}"))
      ;;
    -r | --remove)
      prev="-r"
      [ $COMP_CWORD -eq 2 ] && COMPREPLY=($(compgen -W '${ARRAY}' -- "${cur}"))
      [ $COMP_CWORD -gt 3 ] && COMPREPLY=($(compgen -W '' -- "${cur}"))
      ;;
    -)
      prev="-" COMPREPLY=($(compgen -W '${SHORTOPTS} ${LONGOPTS}' -- "${cur}"))
      ;;
    *)
      if [ -n "${ARRAY}" ]; then
        COMPREPLY=($(compgen -W '${ARRAY}' -- "${cur}"))
      elif [[ -n "$OPTS" ]]; then
        #[ $COMP_CWORD -gt 3 ] && \
        COMPREPLY=($(compgen -W '${OPTS}' -- "${cur}"))
      elif [[ ${cur} == --* ]]; then
        COMPREPLY=($(compgen -W '${LONGOPTS}' -- ${cur}))
      elif [[ ${cur} == -* ]]; then
        COMPREPLY=($(compgen -W '${SHORTOPTS}' -- ${cur}))
      fi
      return
      ;;
    esac
  fi
} &&
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # enable completions
  complete -F _cdd cdd
# vim ft=shell noai
