#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 202103280123-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.pro
# @License       : WTFPL
# @ReadME        : bonsai-tree --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Sunday, Mar 28, 2021 01:23 EDT
# @File          : bonsai-tree
# @Description   : bonsai.sh is a static and live bonsai tree generator, written in bash.
# @TODO          :
# @Other         : Author: John Allbritten: theSynAck.com
# @Resource      : https://gitlab.com/jallbrit/bonsai.sh.git
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#[ -f "$HOME/.local/share/misc/bonsai-tree/options/array" ] || bonsai-tree --options &>/dev/null
_bonsai-tree() {
  ___findcmd() { find -L "${1:-$CONFDIR/}" -maxdepth ${3:-3} -type ${2:-f} 2>/dev/null | sed 's#'${1:-$CONFDIR}'##g' | grep '^' || return 1; }
  local cur prev words cword opts
  local cur="${COMP_WORDS[$COMP_CWORD]}"
  local prev="${COMP_WORDS[$COMP_CWORD - 1]}"
  local CONFFILE="settings.conf"
  local CONFDIR="$HOME/.config/misc/settings/bonsai-tree"
  local OPTSDIR="$HOME/.local/share/misc/bonsai-tree/options"
  local SEARCHDIR="${CONFDIR:-$HOME/.config/misc/settings/bonsai-tree}"
  #local SEARCHCMD="$(___findcmd "$SEARCHDIR/" "d" "1")"
  local DEFAULTARRAY="$([ -f "$OPTSDIR/array" ] && grep -sEv '#|^$' "$OPTSDIR/array" || echo '--options --help --version')"
  local DEFAULTOPTS="$([ -f "$OPTSDIR/options" ] && grep -sEv '#|^$' "$OPTSDIR/options" || echo '--options --help --version')"
  local LONGOPTS="$(grep -sEv '#|^$' "$OPTSDIR/options" || echo "$DEFAULTOPTS" | tr ' ' '\n' | grep '\--')"
  local SHORTOPTS="$(grep -sEv '#|^$' "$OPTSDIR/options" || echo "$DEFAULTOPTS" | tr ' ' '\n' | grep -v '\--')"
  local OPTS="$DEFAULTOPTS"
  local ARRAY="$OPTS"
  local SHOW_COMP_OPTS=""
  local FILEDIR=""

  _init_completion || return
  if [ "$SHOW_COMP_OPTS" != "" ]; then
    local SHOW_COMP_OPTS_SEP="$(echo "$SHOW_COMP_OPTS" | tr ',' ' ')"
    compopt -o $SHOW_COMP_OPTS_SEP
  fi
  if [[ ${cur} == --* ]]; then
    COMPREPLY=($(compgen -W '${LONGOPTS}' -- ${cur}))
  elif [[ ${cur} == -* ]]; then
    COMPREPLY=($(compgen -W '${SHORTOPTS}' -- ${cur}))
  else
    case ${COMP_WORDS[1]:-$prev} in
    --options) prev="--options" && COMPREPLY=($(compgen -W '' -- "${cur}")) ;;
    -c | --config) prev="--config" && COMPREPLY=($(compgen -W '' -- "${cur}")) ;;
    -h | --help) prev="--help" && COMPREPLY=($(compgen -W '' -- "${cur}")) ;;
    -v | --version) prev="--version" && COMPREPLY=($(compgen -W '' -- "${cur}")) ;;
    --)
      prev="--" COMPREPLY=($(compgen -W '${LONGOPTS}' -- ${cur}))
      ;;
    *)
      if [ -n "${ARRAY}" ]; then
        COMPREPLY=($(compgen -W '${ARRAY}' -- "${cur}"))
      elif [[ -n "$OPTS" ]]; then
        #[ $COMP_CWORD -gt 3 ] && \
        COMPREPLY=($(compgen -W '${OPTS}' -- "${cur}"))
      elif [[ ${cur} == --* ]]; then
        COMPREPLY=($(compgen -W '${LONGOPTS}' -- ${cur}))
      elif [[ ${cur} == -* ]]; then
        COMPREPLY=($(compgen -W '${SHORTOPTS}' -- ${cur}))
      fi
      return
      ;;
    esac
  fi
} &&
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # enable completions
  complete -F _bonsai-tree bonsai-tree
# vim ft=shell noai

