# -----------------------------------------------------------------------------
#
# https://github.com/sorin-ionescu/dotfiles/blob/master/inputrc
# https://wiki.archlinux.org/index.php/Readline
#
# -----------------------------------------------------------------------------

$if mode=emacs
# Readline specific functions
"\e[1~": beginning-of-line            # CTRL + A
"\e[4~": end-of-line                  # CTRL + E
"\e[5C": forward-word                 # Control + Right
"\e[5D": backward-word                # Control + Left
"\e[3~": delete-char                  # Delete
"\e[2~": quoted-insert                # CTRL + v
"\e[5~": history-search-backward      # Page Up
"\e[6~": history-search-forward       # Page Down
"\e[1;5A": history-search-backward    # control + up
"\e[1;5B": history-search-forward     $ control + down
"\e[1;5C": forward-word
"\e[1;5D": backward-word

# mappings for Ctrl-left-arrow and Ctrl-right-arrow for word moving
"\e[1;5C" #  forward-word
"\e[1;5D" #  backward-word
"\e[5C"   #  forward-word
"\e[5D"   #  backward-word
"\e\e[C"  #  forward-word
"\e\e[D"  #  backward-word

# If the above prevents Left and Right from working, try this:
#"\e[C": forward-char                # Move forward one character.
#"\e[D": backward-char               # Move backwards one character.
$endif

# Avoid binding ^J, ^M,  ^C, ^?, ^S, ^Q, etc.
$if mode=vi
set keymap vi-command
"gg": beginning-of-history
"G": end-of-history
"k": history-search-backward
"j": history-search-forward
"?": reverse-search-history
"/": forward-search-history

set keymap vi-insert
"\C-l": clear-screen
"\C-w": backward-kill-word
"\C-a": beginning-of-line
"\C-e": end-of-line

"\e[5~": history-search-backward # Page Up
"\e[6~": history-search-forward  # Page Down
$endif

$if Bash
Space: magic-space
$endif

# Color files by types
set colored-stats On
set visible-stats On                # Append char to indicate type
set mark-symlinked-directories On   # Mark symlinked directories
set colored-completion-prefix On    # Color the common prefix
set menu-complete-display-prefix On # Color the common prefix in menu-complete

# Set visible bell
set bell-style visible
set bell-style audible

# Completion Options
set page-completions on        # Page completions more like.
set completion-ignore-case on  # Ignore case
set completion-query-items 200 # Show double the number of default completions.
set match-hidden-files on      # Don't match hidden files
set show-all-if-ambiguous off  # Enable single tab completion
set show-all-if-unmodified on  # List immediately, don't bell if ambigous.
set visible-stats on           # Show item type like 'ls -F', displays /,*,@ next to name
set enable-keypad on           # try to enable the application keypad when it is called.
set show-mode-in-prompt on     # show in prompt
set bind-tty-special-chars off # Adds punctuation as word delimiters
set skip-completed-text on
set mark-symlinked-directories on

# Fix for accents input with UTF-8.
set meta-flag on
set input-meta on
set output-meta on
set convert-meta off

# show mode on PS1
set vi-ins-mode-string "\1\e[34;1m\2└──[ins] \1\e[0m\2"
set vi-cmd-mode-string "\1\e[33;1m\2└──[cmd] \1\e[0m\2"

"\e[3~": delete-char             # Delete
"\e[5~": history-search-backward # Page Up
"\e[6~": history-search-forward  # Page Down
"\e[A": history-search-backward
"\e[B": history-search-forward

# for non RH/Debian xterm, can't hurt for RH/Debian xterm
"\eOH": beginning-of-line
"\eOF": end-of-line

# for freebsd console
# "\e[H": beginning-of-line
# "\e[F": end-of-line

# IPython needs this to appear at the bottom of the
# file for clear-screen to work
$if Python
$endif

# Set the editing mode vi or emacs
set editing-mode emacs

# set the keymap mode vi or emacs
#set keymap vi
